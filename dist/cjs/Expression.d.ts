export class Expression {
    constructor(model: any, op: any, properties: any, params: any);
    init(model: any, op: any, properties: any, params: any): void;
    model: any;
    table: any;
    op: any;
    params: any;
    properties: any;
    conditions: any[] | undefined;
    fields: any[] | undefined;
    filters: any[] | undefined;
    item: {} | undefined;
    key: {} | undefined;
    keys: any[] | undefined;
    updates: any[] | undefined;
    names: {} | undefined;
    namesMap: {} | undefined;
    values: {} | undefined;
    valuesMap: {} | undefined;
    nindex: number | undefined;
    vindex: number | undefined;
    fallback: boolean | undefined;
    execute: boolean | undefined;
    delimiter: any;
    tableName: any;
    index: any;
    hash: any;
    sort: any;
    prepare(fields: any, properties?: {}, params?: {}): void;
    add(field: any, value: any): void;
    mapped: {} | undefined;
    addConditions(op: any): void;
    makeConditions(where: any): any;
    addFilters(): void;
    addFilter(name: any, value: any): void;
    addKey(op: any, field: any, value: any): void;
    addUpdate(field: any, value: any): void;
    addUpdates(): void;
    selectIndex(indexes: any, params: any): any;
    command(): any;
    getValue(field: any, context: any, properties: any): any;
    removeEmptyStrings(field: any, obj: any): any;
    getItem(): {} | undefined;
    and(terms: any): any;
    getAction(params: any): "delete" | "add" | "remove" | "set";
    addName(name: any): any;
    addValue(value: any): any;
}
